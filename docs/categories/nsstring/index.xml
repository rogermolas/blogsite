<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Nsstring on Roger Molas</title>
    <link>https://rogermolas.github.io/blogsite/categories/nsstring/</link>
    <description>Recent content in Nsstring on Roger Molas</description>
    <generator>Hugo -- gohugo.io</generator>
    <managingEditor>contact@rogermolas.com (Roger Molas)</managingEditor>
    <webMaster>contact@rogermolas.com (Roger Molas)</webMaster>
    <lastBuildDate>Mon, 29 Jun 2015 09:44:00 +0000</lastBuildDate>
    
	<atom:link href="https://rogermolas.github.io/blogsite/categories/nsstring/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>New iOS9 String Transformations API</title>
      <link>https://rogermolas.github.io/blogsite/post/new-ios9-string-transformations-api/</link>
      <pubDate>Mon, 29 Jun 2015 09:44:00 +0000</pubDate>
      <author>contact@rogermolas.com (Roger Molas)</author>
      <guid>https://rogermolas.github.io/blogsite/post/new-ios9-string-transformations-api/</guid>
      <description>String transformations formerly done using CFStringTransform a part of Core Foundation Framework. In iOS 9 string transformation can be done along with the new “NSStringTransform*” constants a native Cocoa API and no need to deal with bridging to CFStringRef.
Here are some of my favorite transformations that can be done with the new NSStringTransform* API.
[code language=&amp;ldquo;objc&amp;rdquo;] print(&amp;ldquo;roger&amp;rdquo;.stringByApplyingTransform(NSStringTransformLatinToGreek, reverse: false)!) //ῤογερ
print(&amp;ldquo;roger&amp;rdquo;.stringByApplyingTransform(NSStringTransformLatinToHangul, reverse: false)!) //로겔 print(&amp;rdquo;\uD83D\uDC2E&amp;rdquo;.stringByApplyingTransform(NSStringTransformToUnicodeName, reverse: false)!) //{COW FACE}</description>
    </item>
    
  </channel>
</rss>